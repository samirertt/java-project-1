import java.util.Scanner;
import java.util.Arrays;  // In case arrays are needed
import java.util.InputMismatchException;  // to sort out input errors

/**
 * The MatrixOperations class holds the operations:
 * transpose, multiplication, element-wise multiplication, and inverse.
 * Users can select the operations from the menu.
 */
public class MatrixOperations {

    /**
     * Main code that displays the menu for matrix operations.
     *
     */
    public static void main(String[] args) {
        Scanner x = new Scanner(System.in);

        while (true) {
            displaySubmenu();
            String option = x.nextLine().toLowerCase();

            switch (option) {
                case "a":
                    System.out.println("Transpose Matrix");
                    transposeMatrix(x);
                    break;
                case "b":
                    System.out.println("Matrix Multiplication");
                    multiplyMatrices(x);
                    break;
                case "c":
                    System.out.println("Element-wise Multiplication");
                    elementWiseMultiplication(x);
                    break;
                case "d":
                    System.out.println("Inverse");
                    inverseMatrix(x); // code must be added
                    break;
                case "e":
                    x.close();
                    return;  // Exit the program
                default:
                    System.out.println("Invalid option. Please try again.");
            }
        }
    }

    /**
     * code to display menu
     */
    private static void displaySubmenu() {
        System.out.println("[a] Transpose Matrix");
        System.out.println("[b] Matrix Multiplication");
        System.out.println("[c] Element-wise Multiplication");
        System.out.println("[d] Inverse (Placeholder)");
        System.out.println("[e] Return to the main menu");
        System.out.print("Select one of the matrix operations: ");
    }

    /**
     * this code transposes the entered matrix 
     * Scanner object for user input.
     */
    private static void transposeMatrix(Scanner x) {
        System.out.println("Enter the rows and columns of the matrix (separated by spaces):");
        int rows = x.nextInt();
        int cols = x.nextInt();
        x.nextLine();  

        int[][] matrix = new int[rows][cols];
        System.out.println("Enter matrix elements (separate each element with spaces):");
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                matrix[i][j] = x.nextInt();
            }
        }
        x.nextLine(); 

        int[][] transpose = new int[cols][rows];
        for (int i = 0; i < cols; i++) {
            for (int j = 0; j < rows; j++) {
                transpose[i][j] = matrix[j][i];
            }
        }

        System.out.println("Transposed Matrix:");
        for (int[] row : transpose) {
            for (int element : row) {
                System.out.print(element + " ");
            }
            System.out.println();
        }
    }

    /**
     * this code multiplies two matrices
     */
    private static void multiplyMatrices(Scanner x) {
        System.out.println("Enter the rows and columns for the first matrix (separated by spaces):");
        int rows1 = x.nextInt();
        int cols1 = x.nextInt();
        x.nextLine(); 

        int[][] matrix1 = new int[rows1][cols1];
        System.out.println("Enter elements of the first matrix (separate each element with spaces):");
        for (int i = 0; i < rows1; i++) {
            for (int j = 0; j < cols1; j++) {
                matrix1[i][j] = x.nextInt();
            }
        }
        x.nextLine(); 

        System.out.println("Enter the rows and columns for the second matrix (separated by spaces):");
        int rows2 = x.nextInt();
        int cols2 = x.nextInt();
        x.nextLine(); 

        int[][] matrix2 = new int[rows2][cols2];
        if (cols1 != rows2) {
            System.out.println("Cannot multiply matrices, enter the information properly");
            return;
        }

        System.out.println("Enter elements of the second matrix (separate each element with spaces):");
        for (int i = 0; i < rows2; i++) {
            for (int j = 0; j < cols2; j++) {
                matrix2[i][j] = x.nextInt();
            }
        }
        x.nextLine(); 

        int[][] result = new int[rows1][cols2];
        for (int i = 0; i < rows1; i++) {
            for (int j = 0; j < cols2; j++) {
                int sum = 0;
                for (int k = 0; k < cols1; k++) {
                    sum += matrix1[i][k] * matrix2[k][j];
                }
                result[i][j] = sum;
            }
        }

        System.out.println("Matrix Multiplication output:");
        for (int[] row : result) {
            for (int element : row) {
                System.out.print(element + " ");
            }
            System.out.println();
        }
    }

    /**
     * this code does element-wise multiplication of two matrices
     */
    private static void elementWiseMultiplication(Scanner x) {
        System.out.println("Enter the rows and columns for the matrices (separated by spaces):");
        int rows = x.nextInt();
        int cols = x.nextInt();
        x.nextLine(); 

        int[][] matrix1 = new int[rows][cols];
        int[][] matrix2 = new int[rows][cols];

        System.out.println("Enter elements of the first matrix (separate each element with spaces):");
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                matrix1[i][j] = x.nextInt();
            }
        }
        x.nextLine(); 

        System.out.println("Enter elements of the second matrix (separate each element with spaces):");
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                matrix2[i][j] = x.nextInt();
            }
        }
        x.nextLine(); 

        int[][] result = new int[rows][cols];
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                result[i][j] = matrix1[i][j] * matrix2[i][j];
            }
        }

        System.out.println("Element-wise Multiplication output:");
        for (int[] row : result) {
            for (int element : row) {
                System.out.print(element + " ");
            }
            System.out.println();
        }
    }

    /**
     * inverse code can be added here
     * Scanner object for user input.
     */
    private static void inverseMatrix(Scanner x) {
        System.out.println("Inverse stuff");
    }
}
